name: Build project

on: 
  push:
    branches:
      - develop

  # pull_request:
  #   branches:
  #     - develop

env:
  ITCH_PROJECT_NAME: lil-ronin-testing

jobs:
#-----------------------------------------------------------------------------
# GIT EXPOSE
#-----------------------------------------------------------------------------
  Config:
  - name: Inject slug/short variables
    uses: rlespinasse/github-slug-action@v3.x

  - name: Print slug/short variables
    run: |
      echo "Slug variables"
      echo " - ${{ env.GITHUB_REF_SLUG }}"    
      echo " - ${{ env.GITHUB_HEAD_REF_SLUG }}"
      echo " - ${{ env.GITHUB_BASE_REF_SLUG }}"
      echo " - ${{ env.GITHUB_REPOSITORY_SLUG }}"
      # output e.g. : master feat-new-feature v1.0.0 product-1.0.0-rc.2 new-awesome-product
      echo "Slug URL variables"
      echo " - ${{ env.GITHUB_REF_SLUG_URL }}"
      echo " - ${{ env.GITHUB_HEAD_REF_SLUG_URL }}"
      echo " - ${{ env.GITHUB_BASE_REF_SLUG_URL }}"
      echo " - ${{ env.GITHUB_REPOSITORY_SLUG_URL }}"
      # output e.g. : master feat-new-feature v1-0-0 product-1-0-0-rc-2 new-awesome-product
      echo "Short SHA variables"
      echo " - ${{ env.GITHUB_SHA_SHORT }}"
      # output e.g. : ffac537e

#-----------------------------------------------------------------------------
# BUILD
#-----------------------------------------------------------------------------
  buildForAllPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows # Build a Windows standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
          - WebGL # WebGL.
        unityVersion:
          - 2020.3.2f1
    

    steps:
      - uses: actions/checkout@v2
        name: Checkout Source
        with:
          fetch-depth: 0
          lfs: true

      - uses: actions/cache@v2
        name: Check Cache
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      - uses: game-ci/unity-builder@v2
        name: Build for Platform - ${{ matrix.targetPlatform }}
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          unityVersion: ${{ matrix.unityVersion }}

#-----------------------------------------------------------------------------
# ARCHIVE
#-----------------------------------------------------------------------------
      - uses: actions/upload-artifact@v2
        name: Archive Artifacts
        with:
          name: build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
      
      - uses: montudor/action-zip@v1
        name: "Zip Builds - ${{ matrix.targetPlatform }}"
        #if: github.event.action == 'published'
        with:
          args: zip -qq -r build/build-${{ matrix.targetPlatform }}.zip build/${{ matrix.platform }}

      - uses: svenstaro/upload-release-action@v2
        name: Upload build-${{ matrix.targetPlatform }}.zip to Github Release
        #if: github.event.action == 'published'
        with:
          repo_token: ${{ secrets.GH_CREDENTIALS }}
          asset_name: build-${{ matrix.targetPlatform }}.zip
          file: build/build-${{ matrix.targetPlatform }}.zip
          tag: ${{ github.ref }}-${{ github.sha }}
          body: "Automated deployment from develop branch"
          prerelease: true
          overwrite: false

#-----------------------------------------------------------------------------
# DEPLOY
#-----------------------------------------------------------------------------
  release_webgl_to_itch:
    name: Release WebGL to itch.io
    runs-on: ubuntu-latest
    needs: buildForAllPlatforms
    steps: 
      - name: Download WebGL
        id: download-webgl
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: ${{ github.ref }}-${{ github.sha }}
          file: build-WebGL.zip
          token: ${{ secrets.GH_CREDENTIALS }}
      
      - name: Upload WebGL
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: html
          ITCH_GAME: ${{ env.ITCH_PROJECT_NAME }}
          ITCH_USER: roasted-goblin-studios
          PACKAGE: build-WebGL.zip
          VERSION: ${{ github.ref }}-${{ github.sha }}

  release_windows32_to_itch:
    name: Release Windows (32-Bit) to itch.io
    runs-on: ubuntu-latest
    needs: buildForAllPlatforms
    steps: 
      - name: Download Windows (32-Bit)
        id: download-windows32
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: ${{ github.ref }}-${{ github.sha }}
          file: build-StandaloneWindows.zip
          token: ${{ secrets.GH_CREDENTIALS }}
      
      - name: Upload Windows (32-Bit)
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: windows
          ITCH_GAME: ${{ env.ITCH_PROJECT_NAME }}
          ITCH_USER: roasted-goblin-studios
          PACKAGE: build-StandaloneWindows.zip
          VERSION: ${{ github.ref }}-${{ github.sha }}
  
  # release_windows64_to_itch:
  #   name: Release Windows (64-Bit) to itch.io
  #   runs-on: ubuntu-latest
  #   needs: buildForAllPlatforms
  #   steps: 
  #     - name: Download Windows (64-Bit)
  #       id: download-windows64
  #       uses: dsaltares/fetch-gh-release-asset@master
  #       with:
  #         version: ${{ github.ref }}-${{ github.sha }}
  #         file: build-StandaloneWindows64.zip
  #         token: ${{ secrets.GH_CREDENTIALS }}
      
      # - name: Upload Windows (64-Bit)
      #   uses: josephbmanley/butler-publish-itchio-action@master
      #   env:
      #     BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
      #     CHANNEL: windows
      #     ITCH_GAME: ${{ env.ITCH_PROJECT_NAME }}
      #     ITCH_USER: roasted-goblin-studios
      #     PACKAGE: build-StandaloneWindows64.zip
      #     VERSION: ${{ steps.download-windows64.outputs.version }}

  release_macos_to_itch:
    name: Release MacOS to itch.io
    runs-on: ubuntu-latest
    needs: buildForAllPlatforms
    steps: 
      - name: Download MacOS
        id: download-macos
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: ${{ github.ref }}-${{ github.sha }}
          file: build-StandaloneOSX.zip
          token: ${{ secrets.GH_CREDENTIALS }}
      
      - name: Upload MacOS
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: mac
          ITCH_GAME: ${{ env.ITCH_PROJECT_NAME }}
          ITCH_USER: roasted-goblin-studios
          PACKAGE: build-StandaloneOSX.zip
          VERSION: ${{ github.ref }}-${{ github.sha }}

  release_linux_to_itch:
    name: Release Linux to itch.io
    runs-on: ubuntu-latest
    needs: buildForAllPlatforms
    steps: 
      - name: Download Linux
        id: download-linux
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: ${{ github.ref }}-${{ github.sha }}
          file: build-StandaloneLinux64.zip
          token: ${{ secrets.GH_CREDENTIALS }}
      
      - name: Upload Linux
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: linux
          ITCH_GAME: ${{ env.ITCH_PROJECT_NAME }}
          ITCH_USER: roasted-goblin-studios
          PACKAGE: build-StandaloneLinux64.zip
          VERSION: ${{ github.ref }}-${{ github.sha }}
    