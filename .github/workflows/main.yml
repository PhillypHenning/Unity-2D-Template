name: Build project

on: 
  push:
    branches:
      - develop
      - master

  pull_request:
    branches:
      - develop


env:
  ITCH_PROJECT_NAME: lil-ronin-testing


jobs:
#-----------------------------------------------------------------------------
# BUILD
#-----------------------------------------------------------------------------
  buildForAllPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows # Build a Windows standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
          - WebGL # WebGL.
        unityVersion:
          - 2020.3.2f1
    

    steps:
      - uses: actions/checkout@v2
        name: Checkout Source
        with:
          fetch-depth: 0
          lfs: true

      - uses: actions/cache@v2
        name: Check Cache
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      - uses: game-ci/unity-builder@v2
        name: Build for Platform - ${{ matrix.targetPlatform }}
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          unityVersion: ${{ matrix.unityVersion }}

#-----------------------------------------------------------------------------
# ARCHIVE
#-----------------------------------------------------------------------------

      - uses: actions/upload-artifact@v2
        name: Archive Artifacts
        with:
          name: build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
      
      - uses: montudor/action-zip@v1
        name: "Zip Builds - ${{ matrix.targetPlatform }}"
        #if: github.event.action == 'published'
        with:
          args: zip -qq -r build/build-${{ matrix.targetPlatform }}.zip build/${{ matrix.platform }}

      - uses: svenstaro/upload-release-action@v2
        name: Upload build-${{ matrix.targetPlatform }}.zip to Github Release
        #if: github.event.action == 'published'
        with:
          repo_token: ${{ secrets.GH_CREDENTIALS }}
          asset_name: build-${{ matrix.targetPlatform }}.zip
          file: build/build-${{ matrix.targetPlatform }}.zip
          tag: ${{ github.ref }}
          overwrite: true
          body: "Automated deployment from development branch"


#-----------------------------------------------------------------------------
# DEPLOY
#-----------------------------------------------------------------------------

  release_webgl_to_itch:
    name: Release WebGL to itch.io
    runs-on: ubuntu-latest
    needs: buildForAllPlatforms
    steps: 
      - name: Download WebGL
        id: download-webgl
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: "latest"
          file: build-WebGL.zip
          token: ${{ secrets.GH_CREDENTIALS }}
      
      - name: Upload WebGL
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS:
          CHANNEL: html
          ITCH_GAME: ${{ env.ITCH_PROJECT_NAME }}
          ITCH_USER: awildphil
          PACKAGE: build-WebGL.zip
          VERSION: ${{ steps.download-webgl.outputs.version }}
    